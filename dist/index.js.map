{"version":3,"sources":["../index.js"],"names":["React","useLayoutEffect","useState","useRef","useContext","createContext","scrollmonitor","attrs","defaultState","isInViewport","isFullyInViewport","isAboveViewport","isBelowViewport","top","bottom","height","ScrollContainerContext","useScrollMonitor","ref","callbacks","offsets","current","waitCount","updateWaitCount","scrollMonitorContainer","updateCheck","watcher","create","eventName","on","update","triggerCallbacks","stateChange","destroy","createUpdatedState","reduce","acc","attr","useScrollState","state","updateState","useScrollContainer","container","setContainer","createContainer","withScrollContainer","Component","props"],"mappings":"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","file":"index.js","sourcesContent":["import React, { useLayoutEffect, useState, useRef, useContext, createContext } from 'react';\nimport scrollmonitor from 'scrollmonitor';\n\nconst attrs = [\n\t'isInViewport',\n\t'isFullyInViewport',\n\t'isAboveViewport',\n\t'isBelowViewport',\n\t'top',\n\t'bottom',\n\t'height',\n];\n\nconst defaultState = {\n\tisInViewport: 0,\n\tisFullyInViewport: 0,\n\tisAboveViewport: 0,\n\tisBelowViewport: 0,\n\ttop: 0,\n\tbottom: 0,\n\theight: 0,\n};\n\nconst ScrollContainerContext = createContext(scrollmonitor);\n\nexport const useScrollMonitor = (ref, callbacks, offsets=0) => {\n\tlet { current } = ref;\n\tconst [waitCount, updateWaitCount] = useState(0);\n\tconst scrollMonitorContainer = useContext(ScrollContainerContext);\n\n\tconst updateCheck = typeof offsets === 'number'\n\t\t? [current, callbacks, scrollMonitorContainer, offsets]\n\t\t: [current, callbacks, scrollMonitorContainer, offsets.top, offsets.bottom];\n\n\tuseLayoutEffect(() => {\n\t\tif (current === null) {\n\t\t\tupdateWaitCount(waitCount+1);\n\t\t\treturn;\n\t\t}\n\n\t\tconst watcher = scrollMonitorContainer.create(current, offsets);\n\n\t\tfor (let eventName in callbacks) {\n\t\t\twatcher.on(eventName, () => callbacks[eventName](watcher));\n\t\t\twatcher.update();\n\t\t\twatcher.triggerCallbacks();\n\t\t\tif (callbacks.stateChange) {\n\t\t\t\tcallbacks.stateChange(watcher);\n\t\t\t}\n\t\t}\n\n\t\treturn () => {\n\t\t\twatcher.destroy();\n\t\t};\n\t}, updateCheck);\n\n\treturn;\n};\n\nconst createUpdatedState = (watcher) => {\n\treturn attrs.reduce((acc, attr) => {\n\t\tacc[attr] = watcher[attr]; \n\t\treturn acc;\n\t}, {});\n};\n\nexport const useScrollState = (ref, offsets=0) => {\n\tconst [state, updateState] = useState(defaultState);\n\tconst [callbacks] = useState({\n\t\tstateChange: (watcher) => {\n\t\t\tupdateState(createUpdatedState(watcher));\n\t\t}\n\t});\n\n\tuseScrollMonitor(ref, callbacks, offsets);\n\n\treturn state;\n};\n\nconst useScrollContainer = (ref) => {\n\tconst [container, setContainer] = useState(scrollmonitor);\n\tconst [waitCount, updateWaitCount] = useState(0);\n\n\tuseLayoutEffect(() => {\n\t\tif (ref.current === null) {\n\t\t\tupdateWaitCount(waitCount+1);\n\t\t\treturn;\n\t\t}\n\t\tsetContainer(scrollmonitor.createContainer(ref.current));\n\t}, [ref.current]);\n\n\treturn container;\n};\n\nexport const withScrollContainer = Component => props => {\n\tconst ref = useRef(null);\n\tconst container = useScrollContainer(ref);\n\treturn <ScrollContainerContext.Provider value={container}>\n\t\t<Component ref={ref} {...props} />\n\t</ScrollContainerContext.Provider>;\n};"]}